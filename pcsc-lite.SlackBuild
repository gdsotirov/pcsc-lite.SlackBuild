#!/bin/sh
#
# Slackware build script for PC/SC Lite
# Copyright (C) 2008-2022 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=pcsc-lite
VERSION=2.0.0
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Please, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}.tar.bz2 || exit 3
cd $SRC
fix_source

DRIVERS_DIR=/usr/lib${LIBDIRSUFFIX}/pcsc/drivers
SRVCS_DIR=/usr/lib${LIBDIRSUFFIX}/pcsc/services

# Configure
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --build="${ARCH}-slackware-linux" \
            --host="${ARCH}-slackware-linux" \
            --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --mandir=/usr/man \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --docdir=/usr/doc/${NAME}-${VERSION} \
            --enable-ipcdir=/var/run \
            --enable-usbdropdir="$DRIVERS_DIR" \
            --enable-shared=yes \
            --enable-static=no \
            --disable-libsystemd || exit 5
# Build with HAL by default instead of libUSB
#           --enable-libusb

# Build & install
make V=1 --jobs || exit 6
make DESTDIR=$PKG install || exit 7

# Additional install steps
install --mode 755 --directory $PKG/etc/rc.d
install --mode 755 --preserve-timestamps \
        $CWD/rc.pcscd $PKG/etc/rc.d/rc.pcscd.new
# Create the directory for drivers and services (not included with this package)
install --mode 755 --directory \
        $PKG/usr/lib${LIBDIRSUFFIX}/pcsc/{drivers,services}

# Prepare
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
DOCFILES="$DOCFILES ChangeLog.svn DRIVERS HELP SECURITY"
create_docs $PKG ${NAME}-${VERSION}

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh      $PKG/install/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh          $SBDIR/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/rc.pcscd           $SBDIR/rc.pcscd
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc         $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required     $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Create package
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

if [ "$1" == "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi

