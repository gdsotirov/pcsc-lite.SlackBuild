#!/bin/sh
#
# Slackware build script for PC/SC Lite
# Copyright (C) 2008-2020 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=pcsc-lite
VERSION=1.8.26
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.bz2 || exit 3
cd $SRC
fix_source

DRIVERS_DIR=/usr/lib${LIBDIRSUFFIX}/pcsc/drivers
SRVCS_DIR=/usr/lib${LIBDIRSUFFIX}/pcsc/services

# Configure
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --build=${ARCH}-slackware-linux \
            --host=${ARCH}-slackware-linux \
            --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --mandir=/usr/man \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --docdir=/usr/doc/${NAME}-${VERSION} \
            --enable-ipcdir=/var/run \
            --enable-usbdropdir="$DRIVERS_DIR" \
            --enable-shared=yes \
            --enable-static=no \
            --disable-libsystemd || exit 5
# Build with HAL by default instead of libUSB
#           --enable-libusb

# Build & install
make V=1 -j4 || exit 6
make DESTDIR=$PKG install || exit 7

# Additional install steps
install -m 755 -d $PKG/etc/rc.d
install -m 755 $CWD/rc.pcscd $PKG/etc/rc.d/rc.pcscd.new
#mv $PKG/etc/reader.conf.d/reader.conf $PKG/etc/reader.conf.d/reader.conf.new
# Create the directory for drivers and services (not included with this package)
install -m 755 -d $PKG/usr/lib${LIBDIRSUFFIX}/pcsc/{drivers,services}

# Prepare
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
DOCFILES="$DOCFILES ChangeLog.svn DRIVERS HELP SECURITY"
create_docs $PKG ${NAME}-${VERSION}
# Build documentation files
#( cd $PKG/usr/doc/$NAME-$VERSION
#  pdflatex ifdhandler-3.tex >/dev/null
#  pdflatex $NAME.tex >/dev/null
#  rm -f *.aux *.tex *.toc *.log *.bib *.out
#  sed -i "s/\/usr\/local\/pcsc\/drivers/`echo $DRIVERS_DIR | sed 's/\\//\\\\\\//g'`/" DRIVERS )
rm -rf $PKG/usr/doc/${NAME}-${VERSION}/doc

mkdir -p $PKG/install
install -m 644 $CWD/doinst.sh      $PKG/install/doinst.sh
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $SBDIR
install -m 644 $CWD/doinst.sh          $SBDIR/doinst.sh
install -m 644 $CWD/rc.pcscd           $SBDIR/rc.pcscd
install -m 644 $CWD/slack-desc         $SBDIR/slack-desc
install -m 644 $CWD/slack-required     $SBDIR/slack-required
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

